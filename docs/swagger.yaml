definitions:
  casbin.CasbinRule:
    properties:
      id:
        type: integer
      method:
        type: string
      path:
        type: string
      ptype:
        type: string
      roleKey:
        type: string
      v3:
        type: string
      v4:
        type: string
      v5:
        type: string
    type: object
  entity.DevGenTable:
    properties:
      businessName:
        description: 生成业务名
        type: string
      className:
        description: 实体类名称
        type: string
      columns:
        description: 字段信息
        items:
          $ref: '#/definitions/entity.DevGenTableColumn'
        type: array
      create_time:
        type: string
      functionAuthor:
        description: 生成功能作者
        type: string
      functionName:
        description: 生成功能名
        type: string
      moduleName:
        description: 生成模块名
        type: string
      options:
        description: 其它生成选项
        type: string
      packageName:
        description: 生成包路径
        type: string
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        description: 备注
        type: string
      tableComment:
        description: 表描述
        type: string
      tableId:
        description: 编号
        type: integer
      tableName:
        description: 表名称
        type: string
      tplCategory:
        description: 使用的模板（crud单表操作 tree树表操作）
        type: string
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      update_time:
        type: string
    type: object
  entity.DevGenTableColumn:
    properties:
      columnComment:
        description: 列描述
        type: string
      columnId:
        description: 编号
        type: integer
      columnKey:
        type: string
      columnName:
        description: 列名称
        type: string
      columnType:
        description: 列类型
        type: string
      dictType:
        description: 字典类型
        type: string
      goField:
        description: Go字段名
        type: string
      goType:
        description: Go类型
        type: string
      htmlField:
        description: html字段名
        type: string
      htmlType:
        description: 显示类型（文本框、文本域、下拉框、复选框、单选框、日期控件）
        type: string
      isEdit:
        description: 是否编辑字段（1是）
        type: string
      isIncrement:
        description: 是否自增（1是）
        type: string
      isInsert:
        description: 是否为插入字段（1是）
        type: string
      isList:
        description: 是否列表字段（1是）
        type: string
      isPk:
        description: 是否主键（1是）
        type: string
      isQuery:
        description: 是否查询字段（1是）
        type: string
      isRequired:
        description: 是否必填（1是）
        type: string
      jsonField:
        type: string
      linkLabelId:
        description: 关联表键名
        type: string
      linkLabelName:
        description: 关联表字段值
        type: string
      linkTableClass:
        description: 关联表类名
        type: string
      linkTableName:
        description: 关联表名
        type: string
      linkTablePackage:
        description: 关联表包名
        type: string
      queryType:
        description: 查询方式（等于、不等于、大于、小于、范围）
        type: string
      sort:
        description: 排序
        type: integer
      tableId:
        description: 归属表编号
        type: integer
      tableName:
        type: string
    type: object
  entity.LogLogin:
    properties:
      browser:
        type: string
      create_time:
        type: string
      createBy:
        type: string
      infoId:
        description: 主键
        type: integer
      ipaddr:
        type: string
      loginLocation:
        type: string
      loginTime:
        type: string
      msg:
        type: string
      os:
        type: string
      params:
        type: string
      platform:
        type: string
      remark:
        description: 备注
        type: string
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
      username:
        type: string
    type: object
  entity.ResEmail:
    properties:
      category:
        description: 0 163邮箱，1 qq邮箱 2 企业邮箱
        type: string
      create_time:
        type: string
      from:
        description: 邮箱账号
        type: string
      host:
        description: 服务器地址
        type: string
      isSsl:
        description: 是否开启ssl
        type: boolean
      mailId:
        type: integer
      nickname:
        description: 发件人
        type: string
      port:
        description: 服务器端口
        type: integer
      secret:
        description: 邮箱密码
        type: string
      status:
        type: string
      update_time:
        type: string
    type: object
  entity.ResOss:
    properties:
      accessKey:
        type: string
      appId:
        type: string
      bucketName:
        type: string
      category:
        description: 0 阿里云 1.七牛云 2. 腾讯云
        type: string
      create_time:
        type: string
      endpoint:
        type: string
      ossCode:
        type: string
      ossId:
        type: integer
      region:
        type: string
      remark:
        type: string
      secretKey:
        type: string
      status:
        description: 0.启用 1.禁止
        type: string
      update_time:
        type: string
    type: object
  entity.SysApi:
    properties:
      apiGroup:
        description: api组
        type: string
      create_time:
        type: string
      description:
        description: api中文描述
        type: string
      id:
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      path:
        description: api路径
        type: string
      update_time:
        type: string
    required:
    - path
    type: object
  entity.SysConfig:
    properties:
      configId:
        type: integer
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      create_time:
        type: string
      isFrontend:
        type: string
      remark:
        type: string
      update_time:
        type: string
    type: object
  entity.SysDept:
    properties:
      children:
        items:
          $ref: '#/definitions/entity.SysDept'
        type: array
      create_time:
        type: string
      createBy:
        type: string
      deptId:
        description: 部门编码
        type: integer
      deptName:
        type: string
      deptPath:
        type: string
      email:
        type: string
      leader:
        description: userId
        type: string
      parentId:
        type: integer
      phone:
        type: string
      sort:
        type: integer
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysDictData:
    properties:
      create_time:
        type: string
      createBy:
        type: string
      cssClass:
        type: string
      dictCode:
        type: integer
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysDictType:
    properties:
      create_time:
        type: string
      createBy:
        type: string
      dictId:
        type: integer
      dictName:
        type: string
      dictType:
        type: string
      remark:
        type: string
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysJob:
    properties:
      args:
        description: 目标参数
        type: string
      concurrent:
        description: 是否并发
        type: string
      create_time:
        type: string
      createBy:
        type: string
      cronExpression:
        description: cron表达式
        type: string
      entryId:
        description: job启动时返回的id
        type: integer
      invokeTarget:
        description: 调用目标
        type: string
      jobGroup:
        description: 任务分组
        type: string
      jobId:
        description: 编码
        type: integer
      jobName:
        description: 名称
        type: string
      jobType:
        description: 任务类型
        type: string
      misfirePolicy:
        description: 执行策略
        type: string
      status:
        description: 状态
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysMenu:
    properties:
      children:
        items:
          $ref: '#/definitions/entity.SysMenu'
        type: array
      component:
        description: 组件路径
        type: string
      create_time:
        type: string
      createBy:
        type: string
      icon:
        type: string
      isAffix:
        description: 是否固定在 tagsView 栏上（0是 1否）
        type: string
      isHide:
        description: 显示状态（0显示 1隐藏）
        type: string
      isIframe:
        description: 是否为内嵌
        type: string
      isKeepAlive:
        description: 是否缓存组件状态（0是 1否）
        type: string
      isLink:
        description: 是否超链接菜单
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        description: 菜单类型（M目录 C菜单 F按钮）
        type: string
      parentId:
        type: integer
      path:
        type: string
      permission:
        description: 权限标识
        type: string
      remark:
        description: 备注
        type: string
      sort:
        type: integer
      status:
        description: 菜单状态（0正常 1停用）
        type: string
      title:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysNotice:
    properties:
      content:
        type: string
      create_time:
        type: string
      deptId:
        type: integer
      deptIds:
        items:
          type: integer
        type: array
      noticeId:
        type: integer
      noticeType:
        type: string
      title:
        type: string
      update_time:
        type: string
      userName:
        type: string
    type: object
  entity.SysPost:
    properties:
      create_time:
        type: string
      createBy:
        type: string
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysRole:
    properties:
      apiIds:
        items:
          $ref: '#/definitions/casbin.CasbinRule'
        type: array
      create_time:
        type: string
      createBy:
        type: string
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        type: string
      roleId:
        type: integer
      roleKey:
        type: string
      roleName:
        type: string
      roleSort:
        type: integer
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
    type: object
  entity.SysUser:
    properties:
      avatar:
        description: 头像
        type: string
      create_time:
        type: string
      createBy:
        type: string
      deptId:
        description: 部门编码
        type: integer
      email:
        description: 邮箱
        type: string
      nickName:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号
        type: string
      postId:
        description: 职位编码
        type: integer
      postIds:
        description: 多岗位
        type: string
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleIds:
        description: 多角色
        type: string
      salt:
        description: 盐
        type: string
      sex:
        description: 性别
        type: string
      status:
        type: string
      update_time:
        type: string
      updateBy:
        type: string
      userId:
        description: 编码
        type: integer
      username:
        type: string
    type: object
  entity.SysUserPwd:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  form.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  from.JobStatus:
    properties:
      jobId:
        type: integer
      status:
        type: string
    type: object
  from.SendMail:
    properties:
      body:
        type: string
      mailId:
        type: integer
      subject:
        type: string
      to:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/api:
    put:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 创建基础api
      tags:
      - SysApi
  /casbin/getPolicyPathByRoleId:
    get:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: query
        name: roleKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取Api权限列表
      tags:
      - SysApi
  /develop/code/gen/code/{tableId}:
    get:
      description: 获取JSON
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 代码生成
      tags:
      - 工具 / 生成工具
  /develop/code/gen/preview/{tableId}:
    get:
      description: 获取JSON
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 代码视图
      tags:
      - 工具 / 生成工具
  /develop/code/table:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加表结构
      tags:
      - 工具 / 生成工具
    put:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.DevGenTable'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改表结构
      tags:
      - 工具 / 生成工具
  /develop/code/table/{tableId}:
    delete:
      description: 删除表结构
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除表结构
      tags:
      - 工具 / 生成工具
  /develop/code/table/db/list:
    get:
      description: 数据库表列分页列表 / database table column page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageNum / 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /develop/code/table/info/{tableId}:
    get:
      description: 获取JSON
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取表信息
      tags:
      - 工具 / 生成工具
  /develop/code/table/info/tableName:
    get:
      description: 获取JSON
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取表信息
      tags:
      - 工具 / 生成工具
  /develop/code/table/list:
    get:
      description: 生成表分页列表
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: tableComment / 数据表描述
        in: query
        name: tableComment
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      summary: 分页列表数据
      tags:
      - 工具 / 生成工具
  /develop/code/table/tableTree:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取树表信息
      tags:
      - 工具 / 生成工具
  /job:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysJob'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改JOB
      tags:
      - 任务
  /job/{jobId}:
    delete:
      description: 删除数据
      parameters:
      - description: 以逗号（,）分割的infoId
        in: path
        name: infoId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 批量删除JOB
      tags:
      - 任务
    get:
      description: 获取JSON
      parameters:
      - description: jobId
        in: path
        name: jobId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取一个job
      tags:
      - 任务
  /job/changeStatus:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/from.JobStatus'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改JOB状态
      tags:
      - 任务
  /job/job:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysJob'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加任务
      tags:
      - 任务
  /job/list:
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: jobName
        in: query
        name: jobName
        type: string
      - description: jobGroup
        in: query
        name: jobGroup
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: job列表
      tags:
      - 任务
  /job/stop/{jobId}:
    get:
      description: 开始Job
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 开始JOB
      tags:
      - 任务
  /log/logJob/{logId}:
    delete:
      description: 删除数据
      parameters:
      - description: 以逗号（,）分割的logId
        in: path
        name: logId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 批量删除登录日志
      tags:
      - 任务日志
  /log/logJob/all:
    delete:
      description: 删除数据
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 清空登录日志
      tags:
      - 任务日志
  /log/logJob/list:
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: jobGroup
        in: query
        name: jobGroup
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: Job日志列表
      tags:
      - 任务日志
  /log/logLogin:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.LogLogin'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改登录日志
      tags:
      - 登录日志
  /log/logLogin/{infoId}:
    delete:
      description: 删除数据
      parameters:
      - description: 以逗号（,）分割的infoId
        in: path
        name: infoId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 批量删除登录日志
      tags:
      - 登录日志
    get:
      description: 获取JSON
      parameters:
      - description: infoId
        in: path
        name: infoId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 通过编码获取登录日志
      tags:
      - 登录日志
  /log/logLogin/all:
    delete:
      description: 删除数据
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 清空登录日志
      tags:
      - 登录日志
  /log/logLogin/list:
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: username
        in: query
        name: username
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 登录日志列表
      tags:
      - 登录日志
  /log/logOper/{operId}:
    delete:
      description: 删除数据
      parameters:
      - description: 以逗号（,）分割的operId
        in: path
        name: operId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 批量删除操作日志
      tags:
      - 操作日志
    get:
      description: 获取JSON
      parameters:
      - description: operId
        in: path
        name: operId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 通过编码获取操作日志
      tags:
      - 操作日志
  /log/logOper/all:
    delete:
      description: 删除数据
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 清空操作日志
      tags:
      - 操作日志
  /log/logOper/list:
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: operName
        in: query
        name: operName
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 操作日志列表
      tags:
      - 操作日志
  /resource/email:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.ResEmail'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加ResEmails
      tags:
      - ResEmails
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.ResEmail'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改ResEmails
      tags:
      - ResEmails
  /resource/email/{mailId}:
    delete:
      description: 删除数据
      parameters:
      - description: mailId
        in: path
        name: mailId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除ResEmails
      tags:
      - ResEmails
    get:
      description: 获取JSON
      parameters:
      - description: mailId
        in: path
        name: mailId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取ResEmails
      tags:
      - ResEmails
  /resource/email/debugMail:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/from.SendMail'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 测试发邮件
      tags:
      - ResEmails
  /resource/email/list:
    get:
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      - description: 状态
        in: query
        name: status
        type: string
      - description: 分类
        in: query
        name: category
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: ResEmails列表数据
      tags:
      - ResEmails
  /resource/oss:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.ResOss'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加ResOsses
      tags:
      - ResOsses
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.ResOss'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改ResOsses状态
      tags:
      - ResOsses
  /resource/oss/{ossId}:
    delete:
      description: 删除数据
      parameters:
      - description: ossId
        in: path
        name: ossId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除ResOsses
      tags:
      - ResOsses
    get:
      description: 获取JSON
      parameters:
      - description: ossId
        in: path
        name: ossId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取ResOsses
      tags:
      - ResOsses
  /resource/oss/list:
    get:
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      - description: 状态
        in: query
        name: status
        type: string
      - description: 分类
        in: query
        name: category
        type: string
      - description: 编号
        in: query
        name: ossCode
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: ResOsses列表数据
      tags:
      - ResOsses
  /resource/oss/uploadFile:
    post:
      description: 上传文件
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 上传文件ResOsses
      tags:
      - ResOsses
  /system/api:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 创建基础api
      tags:
      - SysApi
  /system/api/{id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 删除api
      tags:
      - SysApi
    get:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /system/api/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /system/api/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: path
        in: query
        name: path
        type: string
      - description: description
        in: query
        name: description
        type: string
      - description: method
        in: query
        name: method
        type: string
      - description: apiGroup
        in: query
        name: apiGroup
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /system/config:
    get:
      description: 获取JSON
      parameters:
      - description: configName
        in: query
        name: configName
        type: string
      - description: configKey
        in: query
        name: configKey
        type: string
      - description: configType
        in: query
        name: configType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 配置列表数据
      tags:
      - 配置
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysConfig'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加配置
      tags:
      - 配置
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysConfig'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改配置
      tags:
      - 配置
  /system/config/{configId}:
    delete:
      description: 删除数据
      parameters:
      - description: configId 多个使用逗号分割
        in: path
        name: configId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除配置
      tags:
      - 配置
    get:
      description: 获取JSON
      parameters:
      - description: configId
        in: path
        name: configId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取配置
      tags:
      - 配置
  /system/config/configKey:
    get:
      description: 获取JSON
      parameters:
      - description: configKey
        in: query
        name: configKey
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 配置列表数据ByKey
      tags:
      - 配置
  /system/dept:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysDept'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加部门
      tags:
      - 部门
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysDept'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改部门
      tags:
      - 部门
  /system/dept/{deptId}:
    delete:
      description: 删除数据
      parameters:
      - description: deptId, 逗号隔开
        in: path
        name: deptId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除部门
      tags:
      - 部门
    get:
      description: 获取JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 部门数据
      tags:
      - 部门
  /system/dept/deptList:
    get:
      description: 分页列表
      parameters:
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: deptId
        in: query
        name: deptId
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 部门列表数据
      tags:
      - 部门
  /system/dept/deptTree:
    get:
      description: 部门树列表
      parameters:
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: deptId
        in: query
        name: deptId
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 所有部门树数据
      tags:
      - 部门
  /system/dept/ordinaryDeptLis:
    get:
      description: 部门列表
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 所有部门列表数据
      tags:
      - 部门
  /system/dict/data:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysDictData'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加字典数据
      tags:
      - 字典
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysDictData'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改字典数据
      tags:
      - 字典
  /system/dict/data/{dictCode}:
    delete:
      description: 删除数据
      parameters:
      - description: 'dictCode '
        in: path
        name: dictCode
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除字典数据
      tags:
      - 字典
    get:
      description: 获取JSON
      parameters:
      - description: dictCode
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取字典数据
      tags:
      - 字典
  /system/dict/data/list:
    get:
      description: 获取JSON
      parameters:
      - description: dictLabel
        in: query
        name: dictLabel
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 字典数据列表
      tags:
      - 字典
  /system/dict/data/type:
    get:
      description: 获取JSON
      parameters:
      - description: dictType
        in: path
        name: dictType
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 字典数据获取
      tags:
      - 字典
  /system/dict/type:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysDictType'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加字典类型
      tags:
      - 字典
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysDictType'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改字典类型
      tags:
      - 职位
  /system/dict/type/{dictId}:
    delete:
      description: 删除数据
      parameters:
      - description: 'dictId '
        in: path
        name: dictId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除字典类型
      tags:
      - 字典
    get:
      description: 获取JSON
      parameters:
      - description: dictId
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取字典类型
      tags:
      - 字典
  /system/dict/type/export:
    get:
      description: 导出数据
      parameters:
      - description: userName
        in: query
        name: userName
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 导出用户
      tags:
      - 用户
  /system/dict/type/list:
    get:
      description: 获取JSON
      parameters:
      - description: DictName
        in: query
        name: dictName
        type: string
      - description: dictType
        in: query
        name: dictName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 字典类型列表数据
      tags:
      - 职位
  /system/menu:
    post:
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysMenu'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 创建菜单
      tags:
      - 菜单
    put:
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysMenu'
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改菜单
      tags:
      - 菜单
  /system/menu/{menuId}:
    delete:
      description: 删除数据
      parameters:
      - description: menuId
        in: path
        name: menuId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除菜单
      tags:
      - 菜单
    get:
      description: 获取JSON
      parameters:
      - description: menuId
        in: path
        name: menuId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
  /system/menu/menuList:
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      - description: IsHide
        in: query
        name: IsHide
        type: string
      - description: title
        in: query
        name: title
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
  /system/menu/menuPaths:
    get:
      description: 获取JSON
      parameters:
      - description: roleKey
        in: query
        name: roleKey
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取角色对应的菜单路径数组
      tags:
      - 菜单
  /system/menu/menuRole:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 400, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 登陆成功获取的路由，根据角色名称获取菜单列表数据（左菜单使用）
      tags:
      - 菜单
  /system/menu/menuTreRoleSelect/{roleId}:
    get:
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: integer
      responses:
        "200":
          description: '{"code": 400, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取角色的菜单树
      tags:
      - 菜单
  /system/menu/menuTreSelect:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取菜单树
      tags:
      - 菜单
  /system/notice:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysNotice'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加通知
      tags:
      - 通知
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysNotice'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改通知
      tags:
      - 通知
  /system/notice/{noticeId}:
    delete:
      description: 删除数据
      parameters:
      - description: 'noticeId '
        in: path
        name: noticeId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除通知
      tags:
      - 通知
  /system/post:
    get:
      description: 获取JSON
      parameters:
      - description: postName
        in: query
        name: postName
        type: string
      - description: postCode
        in: query
        name: postCode
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 职位列表数据
      tags:
      - 职位
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysPost'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 添加职位
      tags:
      - 职位
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysPost'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 修改职位
      tags:
      - 职位
  /system/post/{postId}:
    delete:
      description: 删除数据
      parameters:
      - description: 'postId '
        in: path
        name: postId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除职位
      tags:
      - 职位
    get:
      description: 获取JSON
      parameters:
      - description: postId
        in: path
        name: postId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取职位
      tags:
      - 职位
  /system/role:
    get:
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 获取Role数据
      tags:
      - 角色/Role
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysRole'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      summary: 创建角色
      tags:
      - 角色/Role
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysRole'
      responses:
        "200":
          description: '{"code": 400, "message": "修改失败"}'
          schema:
            type: string
      summary: 修改用户角色
      tags:
      - 角色/Role
  /system/role/{roleId}:
    delete:
      description: 删除数据
      parameters:
      - description: roleId 多个用，分割
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除用户角色
      tags:
      - 角色/Role
  /system/role/changeStatus:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysRole'
      responses:
        "200":
          description: '{"code": 400, "message": "修改失败"}'
          schema:
            type: string
      summary: 修改用户角色状态
      tags:
      - 角色/Role
  /system/role/dataScope:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysRole'
      responses:
        "200":
          description: '{"code": 400, "message": "修改失败"}'
          schema:
            type: string
      summary: 修改用户角色部门
      tags:
      - 角色/Role
  /system/role/rolelist:
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 角色列表数据
      tags:
      - 角色
  /system/user/getCaptcha:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 获取验证码
      tags:
      - Base
  /system/user/getInit:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取添加用户角色和职位
      tags:
      - 用户
  /system/user/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/form.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /system/user/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 退出登录
      tags:
      - Base
  /system/user/profile:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取当前登录用户
      tags:
      - 个人中心
  /system/user/profileAvatar:
    post:
      description: 修改头像
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 修改头像
      tags:
      - 用户
  /system/user/refreshToken:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 刷新token
      tags:
      - Base
  /system/user/sysUser:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysUser'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      summary: 创建用户
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.SysUser'
      responses:
        "200":
          description: '{"code": 400, "message": "添加失败"}'
          schema:
            type: string
      summary: 修改用户状态
      tags:
      - 用户
  /system/user/sysUser/{userId}:
    get:
      description: 获取JSON
      parameters:
      - description: 用户编码
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - "": []
      summary: 获取用户
      tags:
      - 用户
  /system/user/sysUserList:
    get:
      description: 获取JSON
      parameters:
      - description: userName
        in: query
        name: userName
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageNum
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - X-TOKEN: []
      summary: 列表数据
      tags:
      - 用户
  /system/user/sysuser/{userId}:
    delete:
      description: 删除数据
      parameters:
      - description: 多个id 使用逗号隔开
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 400, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除用户数据
      tags:
      - 用户
  /system/user/updatePwd:
    post:
      description: 修改密码
      parameters:
      - description: pwd
        in: body
        name: pwd
        required: true
        schema:
          $ref: '#/definitions/entity.SysUserPwd'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 修改密码
      tags:
      - 用户
swagger: "2.0"
